name: S&P500 Daily Scan & Publish (peaceiris deploy)

on:
  schedule:
    - cron: '0 22 * * 1-5'
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Download S&P500 list
        run: python download_sp500_list.py

      - name: Run worker
        env:
          JOB_TOTAL: 1
          JOB_INDEX: 0
        run: python worker.py

      - name: Upload worker artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: raw-results-0
          path: raw-results-0.json

  aggregate_and_build:
    needs: worker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Download artifacts (worker outputs)
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Finalize & generate public/data (per-ticker JSON + archive)
        run: python finalize.py

      - name: Pre-build listing
        run: |
          echo "public (pre-build) listing:"
          ls -la public || true
          echo "public/data sample:"
          ls -la public/data | head -n 20 || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build Frontend -> frontend/dist
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install --legacy-peer-deps; fi
          npm run build

      - name: Merge frontend/dist -> public (preserve data/top_picks.json)
        run: |
          mkdir -p public
          rsync -av --delete --exclude 'data' --exclude 'top_picks.json' frontend/dist/ public/
          echo "public (post-merge):"
          ls -la public | sed -n '1,200p'

      - name: Validate analyzer outputs present
        run: |
          if [ ! -f public/top_picks.json ]; then
            echo "ERROR: missing public/top_picks.json"; ls -la public || true; exit 1
          fi
          echo "top_picks.json present:"
          head -n 20 public/top_picks.json || true

      - name: Show public summary
        run: |
          ls -la public
          ls -la public/data | head -n 20 || true

      - name: Upload site (for manual inspection if needed)
        uses: actions/upload-artifact@v4
        with:
          name: public-site
          path: public

  deploy:
    needs: aggregate_and_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (for commit metadata)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy to gh-pages via peaceiris (uses personal token)
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PAGES_PAT }}
          publish_dir: ./public
          commit_message: "Publish S&P500 scan site (peaceiris) - ${{ github.run_number }}"

