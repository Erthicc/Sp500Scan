name: S&P500 Daily Scan & Publish (React + Vite + Tailwind)

on:
  schedule:
    - cron: '0 22 * * 1-5'  # 22:00 UTC Mon-Fri (adjust if desired)
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  worker:
    name: Worker (download & analyze)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Download S&P500 list
        run: python download_sp500_list.py

      - name: Run worker (single job)
        env:
          JOB_TOTAL: 1
          JOB_INDEX: 0
        run: python worker.py

      - name: Upload worker artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: raw-results-0
          path: raw-results-0.json

  aggregate_and_build:
    name: Aggregate, finalize, build frontend, merge artifacts
    needs: worker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Download artifacts (worker outputs)
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Finalize & generate public/data (per-ticker JSON + archive)
        run: python finalize.py

      - name: Show generated public files (pre-build)
        run: |
          echo "public/ listing (pre-build):"
          ls -la public || true
          echo "public/data/ sample:"
          ls -la public/data | head -n 40 || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build Frontend (Vite + React + Tailwind) -> frontend/dist
        working-directory: frontend
        run: |
          echo "Frontend dir: $(pwd)"
          if [ -f package-lock.json ]; then
            echo "Found package-lock.json — running npm ci"
            npm ci
          else
            echo "No package-lock.json found — running npm install (legacy-peer-deps)"
            npm install --legacy-peer-deps
          fi
          npm run build
          echo "Built frontend to frontend/dist"

      - name: Merge frontend/dist -> public (preserve analyzer outputs)
        run: |
          # ensure public exists
          mkdir -p public
          echo "Merging frontend/dist -> public (excluding data and top_picks.json)..."
          # rsync will copy and delete stale built files while excluding analyzer outputs
          rsync -av --delete --exclude 'data' --exclude 'top_picks.json' frontend/dist/ public/
          echo "Merge complete. public/ now contains:"
          ls -la public | sed -n '1,200p'

      - name: Validate analyzer outputs present after merge
        run: |
          if [ ! -f public/top_picks.json ]; then
            echo "ERROR: public/top_picks.json missing after merge!"
            echo "public listing:"
            ls -la public || true
            exit 1
          fi
          echo "top_picks.json present, head:"
          head -n 40 public/top_picks.json || true

      - name: Show public (post-merge) listing
        run: |
          echo "public/ listing (post-merge):"
          ls -la public || true
          echo "public/data/ sample:"
          ls -la public/data | head -n 40 || true

      - name: Upload site artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    name: Deploy to GitHub Pages
    needs: aggregate_and_build
    runs-on: ubuntu-latest

    # required by actions/deploy-pages@v4
    environment:
      name: github-pages

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
